import matplotlib.pyplot as plt
import gensim
import numpy as np
import pandas as pd
import spacy
from gensim.models import TfidfModel
from spacy import displacy
from gensim.models import CoherenceModel, LdaModel, LsiModel, HdpModel
from gensim.corpora import Dictionary
import sklearn
import pyLDAvis
import pyLDAvis.gensim_models as gensimvis


import warnings
import os
warnings.filterwarnings('ignore')  # Let's not pay heed to them right now

df = pd.read_csv("Q37 OTs.csv")
df.head(5)

d = list(df['Reviews'])

# joining with space content of text
text = '\n'.join(map(str, d))
 

#displaying result
print(text)

nlp = spacy.load('en_core_web_sm')

my_stop_words = [u'say', u'\'s', u'mr', u'be', u'said', u'says', u'saying', 'today', 'happy', 'nil', 'nan', u'well', 'well', 'ease', 'easy', 'plus', 'saxo', 'like', 'use', 'good', 'etc']
for stopword in my_stop_words:
    lexeme = nlp.vocab[stopword]
    lexeme.is_stop = True

doc = nlp(text)

doc

# we add some words to the stop word list
texts, article = [], []
for w in doc:
    # if it's not a stop word or punctuation mark, add it to our article!
    if w.text != '\n' and not w.is_stop and not w.is_punct and not w.like_num and w.text != 'I':
        # we add the lematized version of the word
        article.append(w.lemma_)
    # if it's a new line, it means we're onto our next document
    if w.text == '\n':
        texts.append(article)
        article = []

texts

bigram = gensim.models.Phrases(texts)
texts = [bigram[line] for line in texts]
texts[10]

dictionary = Dictionary(texts)
corpus = [dictionary.doc2bow(text) for text in texts]
# TFIDF = models.TfidfModel(corpus) # Fit TF-IDF model
# trans_TFIDF = TFIDF[corpus] # Apply TF-IDF model

ldamodel = LdaModel(corpus=corpus, num_topics=5, id2word=dictionary)
ldamodel.show_topics()

lsimodel = LsiModel(corpus=corpus, num_topics=5, id2word=dictionary)
lsimodel.show_topics()

Hdp_model = gensim.models.hdpmodel.HdpModel(corpus=corpus, id2word=dictionary)
Hdp_model.show_topics(5)

pyLDAvis.enable_notebook()

# feed the LDA model into the pyLDAvis instance
# lda_viz = gensimvis.prepare(ldamodel, corpus, dictionary)
# lda_viz

lsitopics = [[word for word, prob in topic] for topicid, topic in lsimodel.show_topics(formatted=False)]

hdptopics = [[word for word, prob in topic] for topicid, topic in Hdp_model.show_topics(formatted=False)]

ldatopics = [[word for word, prob in topic] for topicid, topic in ldamodel.show_topics(formatted=False)]

lsi_coherence = CoherenceModel(topics=lsitopics[:10], texts=texts, dictionary=dictionary, window_size=10).get_coherence()

hdp_coherence = CoherenceModel(topics=hdptopics[:10], texts=texts, dictionary=dictionary, window_size=10).get_coherence()

lda_coherence = CoherenceModel(topics=ldatopics, texts=texts, dictionary=dictionary, window_size=10).get_coherence()

print (lsi_coherence)
print (hdp_coherence)
print(lda_coherence)
